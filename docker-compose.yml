version: '3.0'
networks:
  elk:
    driver: bridge

volumes:
  esdata:
  handesk:
  portainer:

services:
#===============================================================================#
# ELK Stack                                                                     #
#===============================================================================#
  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
    environment:
#      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ES_JAVA_OPTS:   "-Xmx${ES_RAM}m -Xms${ES_RAM}m"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch/templates/winlogbeat.template.json:/usr/share/elasticsearch/templates/winlogbeat.template.json:ro
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/config/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro
    networks:
      - elk

  logstash:
    container_name: logstash
    build:
      context: logstash/
    volumes:
    # Temporary, til I figure out a process to download new databases weekly
      - ./logstash/maxmind/GeoLite2-City_20180807:/etc/maxmind:ro
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5045:5045"
      - "5046:5046"
    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      LS_JAVA_OPTS: "-Xmx${LS_RAM}m -Xms${LS_RAM}m"
    networks:
      - elk

  kibana:
    container_name: kibana
    build:
      context: kibana/
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    networks:
      - elk

#===============================================================================#
# Used for loading initial index templates, dashboards, also provides monitoring#
#===============================================================================#
  metricbeat:
    container_name: metricbeat
    build:
      context: metricbeat/
    networks:
      - elk
    depends_on:
      - logstash

#===============================================================================#
# Nginx, provides SSL, Reverse Proxy for Kibana, 411, serves Handesk            #
#===============================================================================#
  nginx:
    container_name: nginx
    build:
      context: nginx/
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d:ro
      - ./opt/:/etc/nginx/certs:ro
      - ./opt/nginx.users:/etc/nginx/nginx.users:ro
      - handesk:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    networks:
      - elk
    depends_on:
      - kibana
      - handesk
      - fouroneone
      - portainer
      - php

#===============================================================================#
# Etsy/411 for Alerting                                                         #
#===============================================================================#
# 1 - Web Admin UI                                                              #
# 2 - Scheduled Job Runner                                                      #
#-------------------------------------------------------------------------------#
  fouroneone:
    container_name: fouroneone
    build: 411-web/
    networks:
      - elk
    command:
      - /apache2-foreground.sh
    depends_on:
      - mysql

  fouroneonecron:
    container_name: fouroneonecron
    build: 411-web/
    networks:
      - elk
    command:
      - /cron-entrypoint.sh
    depends_on:
      - mysql

#===============================================================================#
# MariaDB (MySQL compatible)                                                    #
#===============================================================================#
# 1 - 411 Database                                                              #
# 2 - Handesk Database                                                          #
#-------------------------------------------------------------------------------#
  mysql:
    container_name: mysql
    build:
      context: mysql/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - elk
    volumes:
      - ./mysql/sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "3306:3306"


  handesk:
    container_name: handesk
    build:
      context: handesk/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql
    networks:
      - elk
    volumes:
      - handesk:/var/www/html

  php:
    container_name: php
    build:
      context: php/
      dockerfile: Dockerfile
    networks:
      - elk
    links:
      - mysql
    volumes:
      - handesk:/var/www/html


  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    networks:
      - elk
