version: '3.0'
networks:
  elk:
    driver: bridge

volumes:
  esdata:
  handesk:
  portainer:
  411db:
  handeskdb:

services:
#===============================================================================#
# ELK Stack                                                                     #
#===============================================================================#
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.0
    environment:
      ES_JAVA_OPTS: "-Xmx${ES_RAM}m -Xms${ES_RAM}m"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch/templates/winlogbeat.template.json:/usr/share/elasticsearch/templates/winlogbeat.template.json:ro
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/config/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro
    networks:
      - elk

  logstash:
    container_name: logstash
    build:
      context: logstash/
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./opt/logstash-forwarder.crt:/etc/logstash/pki/logstash-forwarder.crt:ro
      - ./opt/logstash-forwarder.key:/etc/logstash/pki/logstash-forwarder.key:ro

        # Temporary, til I figure out a process to download new databases weekly
      - ./logstash/maxmind/GeoLite2-City_20180807:/etc/maxmind:ro
    ports:
      # Metricbeat
      - "5044:5044"
      - "50440:50440"

      # Winlogbeat
      - "5045:5045"

      # Filebeat
      - "5046:5046"
    environment:
      LS_JAVA_OPTS: "-Xmx${LS_RAM}m -Xms${LS_RAM}m"
      LS_METRICBEAT_DROP_RATE: ${LS_METRICBEAT_DROP_PERCENTAGE}
    networks:
      - elk

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana-oss:6.4.0
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    networks:
      - elk

#===============================================================================#
# Used for loading initial index templates, dashboards, also provides monitoring#
#===============================================================================#
  metricbeat:
    container_name: metricbeat
    build:
      context: metricbeat/
    networks:
      - elk
    restart: unless-stopped

#===============================================================================#
# Nginx, provides SSL, Reverse Proxy for Kibana, 411, serves Handesk            #
#===============================================================================#
  nginx:
    container_name: nginx
    build:
      context: nginx/
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d:ro
      - ./opt/:/etc/nginx/certs:ro
      - ./opt/nginx.users:/etc/nginx/nginx.users:ro
      - handesk:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    networks:
      - elk
    depends_on:
      - kibana
      - handesk
      - 411web
      - portainer
      - php

#===============================================================================#
# Etsy/411 for Alerting                                                         #
#===============================================================================#
# 1 - Web Admin UI                                                              #
# 2 - Scheduled Job Runner                                                      #
# 2 - Dedicated MariaDB Server                                                  #
#-------------------------------------------------------------------------------#
  411web:
    container_name: 411web
    build: 411/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${FOURONEONE_DB}
      MYSQL_USER: ${FOURONEONE_DB_USER}
      MYSQL_PASSWORD: ${FOURONEONE_DB_PASS}
    networks:
      - elk
    command:
      - /apache2-foreground.sh
    depends_on:
      - 411db

  411cron:
    container_name: 411cron
    build: 411/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${FOURONEONE_DB}
      MYSQL_USER: ${FOURONEONE_DB_USER}
      MYSQL_PASSWORD: ${FOURONEONE_DB_PASS}
    networks:
      - elk
    command:
      - /cron-entrypoint.sh
    depends_on:
      - 411db

  411db:
    container_name: 411db
    image: mariadb:10.3.8-bionic
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${FOURONEONE_DB}
      MYSQL_USER: ${FOURONEONE_DB_USER}
      MYSQL_PASSWORD: ${FOURONEONE_DB_PASS}
    networks:
      - elk
    volumes:
      - ./411/sql/01_create_411_database.sql:/docker-entrypoint-initdb.d/01_create_411_database.sql:ro
      - 411db:/var/lib/mysql


#===============================================================================#
# Handesk Ticketing App                                                         #
#===============================================================================#
  handesk:
    container_name: handesk
    build:
      context: handesk/
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${HANDESK_DB}
      MYSQL_USER: ${HANDESK_DB_USER}
      MYSQL_PASSWORD: ${HANDESK_DB_PASS}
    depends_on:
      - handeskdb
    networks:
      - elk
    volumes:
      - handesk:/var/www/html

  handeskdb:
    container_name: handeskdb
    image: mariadb:10.3.8-bionic
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${HANDESK_DB}
      MYSQL_USER: ${HANDESK_DB_USER}
      MYSQL_PASSWORD: ${HANDESK_DB_PASS}
    networks:
      - elk
    volumes:
      - ./handesk/sql/02_create_handesk.sql:/docker-entrypoint-initdb.d/02_create_handesk.sql:ro
      - handeskdb:/var/lib/mysql

#===============================================================================#
# PHP-FPM Container                                                             #
#===============================================================================#
# 1 - Currently used by Handesk                                                 #
#-------------------------------------------------------------------------------#
  php:
    container_name: php
    build:
      context: php/
      dockerfile: Dockerfile
    networks:
      - elk
    links:
      - handeskdb
    volumes:
      - handesk:/var/www/html
    environment:
      DB_CONNECTION: mysql
      DB_HOST: handeskdb
      DB_PORT: 3306
      DB_DATABASE: ${HANDESK_DB}
      DB_USERNAME: ${HANDESK_DB_USER}
      DB_PASSWORD: ${HANDESK_DB_PASS}

#===============================================================================#
# Container Management Application                                              #
#===============================================================================#
  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    networks:
      - elk

#===============================================================================#
# Optional - for generating Lets Encrypt SSL Certificates                       #
#===============================================================================#
  certbot:
    build:
      context: certbot/
      dockerfile: Dockerfile
    container_name: certbot
    networks:
      - elk
